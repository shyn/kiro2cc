name: Build and Release

on:
    release:
        types: [created]

jobs:
    build:
        name: Build and Upload Release Assets
        runs-on: ${{ matrix.platform.os }}
        strategy:
            matrix:
                platform:
                    - os: ubuntu-latest
                      target: linux/amd64
                      artifact_suffix: linux-amd64
                    - os: ubuntu-latest
                      target: linux/arm64
                      artifact_suffix: linux-arm64
                    - os: windows-latest
                      target: windows/amd64
                      artifact_suffix: windows-amd64.exe
                    - os: macos-latest
                      target: darwin/amd64
                      artifact_suffix: macos-amd64
                    - os: macos-latest
                      target: darwin/arm64
                      artifact_suffix: macos-arm64

        steps:
            - name: Checkout code
              uses: actions/checkout@v3

            - name: Set up Go
              uses: actions/setup-go@v4
              with:
                  go-version: '1.23.3'
                  check-latest: true

            - name: Extract version from tag
              id: get_version
              shell: bash
              run: echo "VERSION=${GITHUB_REF#refs/tags/v}" >> $GITHUB_OUTPUT

            - name: Build
              env:
                  GOOS: ${{ split(matrix.platform.target, '/')[0] }}
                  GOARCH: ${{ split(matrix.platform.target, '/')[1] }}
              run: |
                  go build -v -trimpath -ldflags="-s -w" -o kiro2cc-${{ matrix.platform.artifact_suffix }} .

            - name: Install UPX
              if: runner.os != 'macOS'
              shell: bash
              run: |
                  if [ "${{ runner.os }}" == "Linux" ]; then
                    sudo apt-get update && sudo apt-get install -y upx
                  elif [ "${{ runner.os }}" == "Windows" ]; then
                    choco install upx -y
                  fi

            - name: Compress binary with UPX
              if: runner.os != 'macOS'
              shell: bash
              run: |
                  upx --best --lzma kiro2cc-${{ matrix.platform.artifact_suffix }}

            - name: Upload Release Asset
              uses: actions/upload-release-asset@v1
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
              with:
                  upload_url: ${{ github.event.release.upload_url }}
                  asset_path: ./kiro2cc-${{ matrix.platform.artifact_suffix }}
                  asset_name: kiro2cc-${{ steps.get_version.outputs.VERSION }}-${{ matrix.platform.artifact_suffix }}
                  asset_content_type: application/octet-stream
